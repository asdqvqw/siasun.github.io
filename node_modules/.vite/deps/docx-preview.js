import {
  __commonJS
} from "./chunk-TFWDKVI3.js";

// node_modules/docx-preview/dist/docx-preview.min.js
var require_docx_preview_min = __commonJS({
  "node_modules/docx-preview/dist/docx-preview.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.docx = t() : e.docx = t();
    }(window, function() {
      return function(e) {
        var t = {};
        function r(a) {
          if (t[a])
            return t[a].exports;
          var n = t[a] = { i: a, l: false, exports: {} };
          return e[a].call(n.exports, n, n.exports, r), n.l = true, n.exports;
        }
        return r.m = e, r.c = t, r.d = function(e2, t2, a) {
          r.o(e2, t2) || Object.defineProperty(e2, t2, { enumerable: true, get: a });
        }, r.r = function(e2) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
        }, r.t = function(e2, t2) {
          if (1 & t2 && (e2 = r(e2)), 8 & t2)
            return e2;
          if (4 & t2 && "object" == typeof e2 && e2 && e2.__esModule)
            return e2;
          var a = /* @__PURE__ */ Object.create(null);
          if (r.r(a), Object.defineProperty(a, "default", { enumerable: true, value: e2 }), 2 & t2 && "string" != typeof e2)
            for (var n in e2)
              r.d(a, n, function(t3) {
                return e2[t3];
              }.bind(null, n));
          return a;
        }, r.n = function(e2) {
          var t2 = e2 && e2.__esModule ? function() {
            return e2.default;
          } : function() {
            return e2;
          };
          return r.d(t2, "a", t2), t2;
        }, r.o = function(e2, t2) {
          return Object.prototype.hasOwnProperty.call(e2, t2);
        }, r.p = "", r(r.s = 1);
      }([function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), function(e2) {
          e2[e2.Document = 0] = "Document", e2[e2.Paragraph = 1] = "Paragraph", e2[e2.Run = 2] = "Run", e2[e2.Break = 3] = "Break", e2[e2.Table = 4] = "Table", e2[e2.Row = 5] = "Row", e2[e2.Cell = 6] = "Cell", e2[e2.Hyperlink = 7] = "Hyperlink", e2[e2.Drawing = 8] = "Drawing", e2[e2.Image = 9] = "Image";
        }(t.DomType || (t.DomType = {})), function(e2) {
          e2[e2.Settings = 0] = "Settings", e2[e2.Theme = 1] = "Theme", e2[e2.StylesWithEffects = 2] = "StylesWithEffects", e2[e2.Styles = 3] = "Styles", e2[e2.FontTable = 4] = "FontTable", e2[e2.Image = 5] = "Image", e2[e2.WebSettings = 6] = "WebSettings", e2[e2.Unknown = 7] = "Unknown";
        }(t.DomRelationshipType || (t.DomRelationshipType = {}));
      }, function(e, t, r) {
        "use strict";
        var a = this && this.__assign || function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, a2 = arguments.length; r2 < a2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        };
        Object.defineProperty(t, "__esModule", { value: true });
        var n = r(2), s = r(3), o = r(7);
        t.renderAsync = function(e2, t2, r2, l) {
          void 0 === r2 && (r2 = null), void 0 === l && (l = null);
          var i = new s.DocumentParser(), c = new o.HtmlRenderer(window.document);
          return (l = a({ ignoreHeight: true, ignoreWidth: false, debug: false, className: "docx", inWrapper: true }, l)) && (l.ignoreWidth = l.ignoreWidth || i.ignoreWidth, l.ignoreHeight = l.ignoreHeight || i.ignoreHeight, i.debug = l.debug || i.debug, c.className = l.className || "docx", c.inWrapper = null == l.inWrapper || l.inWrapper), n.Document.load(e2, i).then(function(e3) {
            return c.render(e3, t2, r2, l), e3;
          });
        };
      }, function(e, t, r) {
        "use strict";
        var a;
        Object.defineProperty(t, "__esModule", { value: true }), function(e2) {
          e2.Document = "word/document.xml", e2.Style = "word/styles.xml", e2.Numbering = "word/numbering.xml", e2.DocumentRelations = "word/_rels/document.xml.rels", e2.NumberingRelations = "word/_rels/numbering.xml.rels", e2.FontRelations = "word/_rels/fontTable.xml.rels";
        }(a || (a = {}));
        var n = function() {
          function e2() {
            this.zip = new JSZip(), this.docRelations = null, this.fontRelations = null, this.numRelations = null, this.styles = null, this.fonts = null, this.numbering = null, this.document = null;
          }
          return e2.load = function(t2, r2) {
            var n2 = new e2();
            return n2.zip.loadAsync(t2).then(function(e3) {
              var t3 = [n2.loadPart(a.DocumentRelations, r2), n2.loadPart(a.FontRelations, r2), n2.loadPart(a.NumberingRelations, r2), n2.loadPart(a.Style, r2), n2.loadPart(a.Numbering, r2), n2.loadPart(a.Document, r2)];
              return Promise.all(t3.filter(function(e4) {
                return null != e4;
              })).then(function(e4) {
                return n2;
              });
            });
          }, e2.prototype.loadDocumentImage = function(e3) {
            return this.loadResource(this.docRelations, e3).then(function(e4) {
              return e4 ? "data:image/png;base64," + e4 : null;
            });
          }, e2.prototype.loadNumberingImage = function(e3) {
            return this.loadResource(this.numRelations, e3).then(function(e4) {
              return e4 ? "data:image/png;base64," + e4 : null;
            });
          }, e2.prototype.loadFont = function(e3) {
            return this.loadResource(this.fontRelations, e3).then(function(e4) {
              return e4 ? "data:application/vnd.ms-package.obfuscated-opentype;charset=utf-8;base64," + e4 : null;
            });
          }, e2.prototype.loadResource = function(e3, t2) {
            var r2 = e3.filter(function(e4) {
              return e4.id == t2;
            });
            return 0 == r2.length ? Promise.resolve(null) : this.zip.files["word/" + r2[0].target].async("base64");
          }, e2.prototype.loadPart = function(e3, t2) {
            var r2 = this, n2 = this.zip.files[e3];
            return n2 ? n2.async("string").then(function(n3) {
              switch (e3) {
                case a.FontRelations:
                  r2.fontRelations = t2.parseDocumentRelationsFile(n3);
                  break;
                case a.DocumentRelations:
                  r2.docRelations = t2.parseDocumentRelationsFile(n3);
                  break;
                case a.NumberingRelations:
                  r2.numRelations = t2.parseDocumentRelationsFile(n3);
                  break;
                case a.Style:
                  r2.styles = t2.parseStylesFile(n3);
                  break;
                case a.Numbering:
                  r2.numbering = t2.parseNumberingFile(n3);
                  break;
                case a.Document:
                  r2.document = t2.parseDocumentFile(n3);
              }
              return r2;
            }) : null;
          }, e2;
        }();
        t.Document = n;
      }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true });
        var a = r(0), n = r(4), s = r(5), o = r(6);
        t.autos = { shd: "white", color: "black", highlight: "transparent" };
        var l, i = function() {
          function e2() {
            this.skipDeclaration = true, this.ignoreWidth = false, this.ignoreHeight = true, this.debug = false;
          }
          return e2.prototype.parseDocumentRelationsFile = function(e3) {
            var t2 = c.parse(e3, this.skipDeclaration);
            return c.elements(t2).map(function(e4) {
              return { id: c.stringAttr(e4, "Id"), type: u.valueOfRelType(e4), target: c.stringAttr(e4, "Target") };
            });
          }, e2.prototype.parseDocumentFile = function(e3) {
            var t2 = this, r2 = { domType: a.DomType.Document, children: [], style: {}, props: null }, n2 = c.byTagName(c.parse(e3, this.skipDeclaration), "body");
            return c.foreach(n2, function(e4) {
              switch (e4.localName) {
                case "p":
                  r2.children.push(t2.parseParagraph(e4));
                  break;
                case "tbl":
                  r2.children.push(t2.parseTable(e4));
                  break;
                case "sectPr":
                  r2.props = t2.parseSectionProperties(e4);
              }
            }), r2;
          }, e2.prototype.parseStylesFile = function(e3) {
            var t2 = this, r2 = [], a2 = c.parse(e3, this.skipDeclaration);
            return c.foreach(a2, function(e4) {
              switch (e4.localName) {
                case "style":
                  r2.push(t2.parseStyle(e4));
                  break;
                case "docDefaults":
                  r2.push(t2.parseDefaultStyles(e4));
              }
            }), r2;
          }, e2.prototype.parseDefaultStyles = function(e3) {
            var t2 = this, r2 = { id: null, name: null, target: null, basedOn: null, styles: [] };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "rPrDefault":
                  var a2 = c.byTagName(e4, "rPr");
                  a2 && r2.styles.push({ target: "span", values: t2.parseDefaultProperties(a2, {}) });
                  break;
                case "pPrDefault":
                  var n2 = c.byTagName(e4, "pPr");
                  n2 && r2.styles.push({ target: "p", values: t2.parseDefaultProperties(n2, {}) });
              }
            }), r2;
          }, e2.prototype.parseCommonProperties = function(e3, t2) {
            if (e3.namespaceURI == s.namespaces.wordml)
              switch (e3.localName) {
                case "color":
                  t2.color = o.getAttributeColorValue(e3, e3.namespaceURI, "val");
                  break;
                case "sz":
                  t2.fontSize = o.getAttributeLengthValue(e3, e3.namespaceURI, "val", o.LengthUsage.FontSize);
              }
          }, e2.prototype.parseStyle = function(e3) {
            var t2 = this, r2 = { id: c.className(e3, "styleId"), isDefault: c.boolAttr(e3, "default"), name: null, target: null, basedOn: null, styles: [], linked: null };
            switch (c.stringAttr(e3, "type")) {
              case "paragraph":
                r2.target = "p";
                break;
              case "table":
                r2.target = "table";
                break;
              case "character":
                r2.target = "span";
            }
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "basedOn":
                  r2.basedOn = c.className(e4, "val");
                  break;
                case "name":
                  r2.name = c.stringAttr(e4, "val");
                  break;
                case "link":
                  r2.linked = c.className(e4, "val");
                  break;
                case "aliases":
                  r2.aliases = c.stringAttr(e4, "val").split(",");
                  break;
                case "pPr":
                  r2.styles.push({ target: "p", values: t2.parseDefaultProperties(e4, {}) });
                  break;
                case "rPr":
                  r2.styles.push({ target: "span", values: t2.parseDefaultProperties(e4, {}) });
                  break;
                case "tblPr":
                case "tcPr":
                  r2.styles.push({ target: "td", values: t2.parseDefaultProperties(e4, {}) });
                  break;
                case "tblStylePr":
                  for (var a2 = 0, n2 = t2.parseTableStyle(e4); a2 < n2.length; a2++) {
                    var s2 = n2[a2];
                    r2.styles.push(s2);
                  }
                  break;
                case "rsid":
                case "qFormat":
                case "hidden":
                case "semiHidden":
                case "unhideWhenUsed":
                case "autoRedefine":
                case "uiPriority":
                  break;
                default:
                  t2.debug && console.warn("DOCX: Unknown style element: " + e4.localName);
              }
            }), r2;
          }, e2.prototype.parseTableStyle = function(e3) {
            var t2 = this, r2 = [], a2 = c.stringAttr(e3, "type"), n2 = "";
            switch (a2) {
              case "firstRow":
                n2 = "tr.first-row td";
                break;
              case "lastRow":
                n2 = "tr.last-row td";
                break;
              case "firstCol":
                n2 = "td.first-col";
                break;
              case "lastCol":
                n2 = "td.last-col";
                break;
              case "band1Vert":
                n2 = "td.odd-col";
                break;
              case "band2Vert":
                n2 = "td.even-col";
                break;
              case "band1Horz":
                n2 = "tr.odd-row";
                break;
              case "band2Horz":
                n2 = "tr.even-row";
                break;
              default:
                return [];
            }
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "pPr":
                  r2.push({ target: n2 + " p", values: t2.parseDefaultProperties(e4, {}) });
                  break;
                case "rPr":
                  r2.push({ target: n2 + " span", values: t2.parseDefaultProperties(e4, {}) });
                  break;
                case "tblPr":
                case "tcPr":
                  r2.push({ target: n2, values: t2.parseDefaultProperties(e4, {}) });
              }
            }), r2;
          }, e2.prototype.parseNumberingFile = function(e3) {
            var t2 = this, r2 = [], a2 = c.parse(e3, this.skipDeclaration), n2 = {}, s2 = [];
            return c.foreach(a2, function(e4) {
              switch (e4.localName) {
                case "abstractNum":
                  t2.parseAbstractNumbering(e4, s2).forEach(function(e5) {
                    return r2.push(e5);
                  });
                  break;
                case "numPicBullet":
                  s2.push(t2.parseNumberingPicBullet(e4));
                  break;
                case "num":
                  var a3 = c.stringAttr(e4, "numId"), o2 = c.elementStringAttr(e4, "abstractNumId", "val");
                  n2[o2] = a3;
              }
            }), r2.forEach(function(e4) {
              return e4.id = n2[e4.id];
            }), r2;
          }, e2.prototype.parseNumberingPicBullet = function(e3) {
            var t2 = c.byTagName(e3, "pict"), r2 = t2 && c.byTagName(t2, "shape"), a2 = r2 && c.byTagName(r2, "imagedata");
            return a2 ? { id: c.intAttr(e3, "numPicBulletId"), src: c.stringAttr(a2, "id"), style: c.stringAttr(r2, "style") } : null;
          }, e2.prototype.parseAbstractNumbering = function(e3, t2) {
            var r2 = this, a2 = [], n2 = c.stringAttr(e3, "abstractNumId");
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "lvl":
                  a2.push(r2.parseNumberingLevel(n2, e4, t2));
              }
            }), a2;
          }, e2.prototype.parseNumberingLevel = function(e3, t2, r2) {
            var a2 = this, n2 = { id: e3, level: c.intAttr(t2, "ilvl"), style: {} };
            return c.foreach(t2, function(e4) {
              switch (e4.localName) {
                case "pPr":
                  a2.parseDefaultProperties(e4, n2.style);
                  break;
                case "lvlPicBulletId":
                  var t3 = c.intAttr(e4, "val");
                  n2.bullet = r2.filter(function(e5) {
                    return e5.id == t3;
                  })[0];
                  break;
                case "lvlText":
                  n2.levelText = c.stringAttr(e4, "val");
                  break;
                case "numFmt":
                  n2.format = c.stringAttr(e4, "val");
              }
            }), n2;
          }, e2.prototype.parseSectionProperties = function(e3) {
            var t2 = this, r2 = {};
            return o.forEachElementNS(e3, s.namespaces.wordml, function(e4) {
              switch (e4.localName) {
                case "pgSz":
                  r2.pageSize = { width: o.getAttributeLengthValue(e4, s.namespaces.wordml, "w"), height: o.getAttributeLengthValue(e4, s.namespaces.wordml, "h"), orientation: e4.getAttributeNS(s.namespaces.wordml, "orient") };
                  break;
                case "pgMar":
                  r2.pageMargins = { left: o.getAttributeLengthValue(e4, s.namespaces.wordml, "left"), right: o.getAttributeLengthValue(e4, s.namespaces.wordml, "right"), top: o.getAttributeLengthValue(e4, s.namespaces.wordml, "top"), bottom: o.getAttributeLengthValue(e4, s.namespaces.wordml, "bottom"), header: o.getAttributeLengthValue(e4, s.namespaces.wordml, "header"), footer: o.getAttributeLengthValue(e4, s.namespaces.wordml, "footer"), gutter: o.getAttributeLengthValue(e4, s.namespaces.wordml, "gutter") };
                  break;
                case "cols":
                  r2.columns = t2.parseColumns(e4);
              }
            }), r2;
          }, e2.prototype.parseColumns = function(e3) {
            var t2 = { numberOfColumns: o.getAttributeIntValue(e3, s.namespaces.wordml, "num"), space: o.getAttributeLengthValue(e3, s.namespaces.wordml, "space"), separator: o.getAttributeBoolValue(e3, s.namespaces.wordml, "sep"), equalWidth: o.getAttributeBoolValue(e3, s.namespaces.wordml, "equalWidth", true), columns: [] };
            return o.forEachElementNS(e3, s.namespaces.wordml, function(r2) {
              "col" == r2.localName && t2.columns.push({ width: o.getAttributeLengthValue(e3, s.namespaces.wordml, "w"), space: o.getAttributeLengthValue(e3, s.namespaces.wordml, "space") });
            }), t2;
          }, e2.prototype.parseParagraph = function(e3) {
            var t2 = this, r2 = { domType: a.DomType.Paragraph, children: [], props: {} };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "r":
                  r2.children.push(t2.parseRun(e4, r2));
                  break;
                case "hyperlink":
                  r2.children.push(t2.parseHyperlink(e4, r2));
                  break;
                case "bookmarkStart":
                  r2.children.push(t2.parseBookmark(e4));
                  break;
                case "pPr":
                  t2.parseParagraphProperties(e4, r2), t2.parseCommonProperties(e4, r2.props);
              }
            }), r2;
          }, e2.prototype.parseParagraphProperties = function(e3, t2) {
            var r2 = this;
            this.parseDefaultProperties(e3, t2.style = {}, null, function(e4) {
              switch (e4.localName) {
                case "pStyle":
                  n.addElementClass(t2, c.className(e4, "val"));
                  break;
                case "cnfStyle":
                  n.addElementClass(t2, u.classNameOfCnfStyle(e4));
                  break;
                case "numPr":
                  r2.parseNumbering(e4, t2);
                  break;
                case "framePr":
                  r2.parseFrame(e4, t2);
                  break;
                case "tabs":
                  r2.parseTabs(e4, t2);
                  break;
                case "rPr":
                  break;
                default:
                  return false;
              }
              return true;
            });
          }, e2.prototype.parseNumbering = function(e3, t2) {
            c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "numId":
                  t2.numberingId = c.stringAttr(e4, "val");
                  break;
                case "ilvl":
                  t2.numberingLevel = c.intAttr(e4, "val");
              }
            });
          }, e2.prototype.parseFrame = function(e3, t2) {
            "drop" == c.stringAttr(e3, "dropCap") && (t2.style.float = "left");
          }, e2.prototype.parseBookmark = function(e3) {
            var t2 = { domType: a.DomType.Run };
            return t2.id = c.stringAttr(e3, "name"), t2;
          }, e2.prototype.parseHyperlink = function(e3, t2) {
            var r2 = this, n2 = { domType: a.DomType.Hyperlink, parent: t2, children: [] }, s2 = c.stringAttr(e3, "anchor");
            return s2 && (n2.href = "#" + s2), c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "r":
                  n2.children.push(r2.parseRun(e4, n2));
              }
            }), n2;
          }, e2.prototype.parseRun = function(e3, t2) {
            var r2 = this, n2 = { domType: a.DomType.Run, parent: t2 };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "t":
                  n2.text = e4.textContent;
                  break;
                case "br":
                  n2.break = c.stringAttr(e4, "type") || "textWrapping";
                  break;
                case "tab":
                  n2.tab = true;
                  break;
                case "drawing":
                  var t3 = r2.parseDrawing(e4);
                  t3 && (n2.children = [t3]);
                  break;
                case "rPr":
                  r2.parseRunProperties(e4, n2);
              }
            }), n2;
          }, e2.prototype.parseRunProperties = function(e3, t2) {
            this.parseDefaultProperties(e3, t2.style = {}, null, function(e4) {
              switch (e4.localName) {
                case "rStyle":
                  t2.className = c.className(e4, "val");
                  break;
                case "vertAlign":
                  switch (c.stringAttr(e4, "val")) {
                    case "subscript":
                      t2.wrapper = "sub";
                      break;
                    case "superscript":
                      t2.wrapper = "sup";
                  }
                  break;
                default:
                  return false;
              }
              return true;
            });
          }, e2.prototype.parseDrawing = function(e3) {
            for (var t2 = 0, r2 = c.elements(e3); t2 < r2.length; t2++) {
              var a2 = r2[t2];
              switch (a2.localName) {
                case "inline":
                case "anchor":
                  return this.parseDrawingWrapper(a2);
              }
            }
          }, e2.prototype.parseDrawingWrapper = function(e3) {
            for (var t2 = { domType: a.DomType.Drawing, children: [], style: {} }, r2 = "anchor" == e3.localName, n2 = null, s2 = c.boolAttr(e3, "simplePos"), o2 = { relative: "page", align: "left", offset: "0" }, i2 = { relative: "page", align: "top", offset: "0" }, u2 = 0, p = c.elements(e3); u2 < p.length; u2++) {
              var d = p[u2];
              switch (d.localName) {
                case "simplePos":
                  s2 && (o2.offset = c.sizeAttr(d, "x", l.Emu), i2.offset = c.sizeAttr(d, "y", l.Emu));
                  break;
                case "extent":
                  t2.style.width = c.sizeAttr(d, "cx", l.Emu), t2.style.height = c.sizeAttr(d, "cy", l.Emu);
                  break;
                case "positionH":
                case "positionV":
                  if (!s2) {
                    var h = "positionH" == d.localName ? o2 : i2, m = c.byTagName(d, "align"), f = c.byTagName(d, "posOffset");
                    m && (h.align = m.textContent), f && (h.offset = c.sizeValue(f, l.Emu));
                  }
                  break;
                case "wrapTopAndBottom":
                  n2 = "wrapTopAndBottom";
                  break;
                case "wrapNone":
                  n2 = "wrapNone";
                  break;
                case "graphic":
                  var g = this.parseGraphic(d);
                  g && t2.children.push(g);
              }
            }
            return "wrapTopAndBottom" == n2 ? (t2.style.display = "block", o2.align && (t2.style["text-align"] = o2.align, t2.style.width = "100%")) : "wrapNone" == n2 ? (t2.style.display = "block", t2.style.position = "relative", t2.style.width = "0px", t2.style.height = "0px", o2.offset && (t2.style.left = o2.offset), i2.offset && (t2.style.top = i2.offset)) : !r2 || "left" != o2.align && "right" != o2.align || (t2.style.float = o2.align), t2;
          }, e2.prototype.parseGraphic = function(e3) {
            for (var t2 = c.byTagName(e3, "graphicData"), r2 = 0, a2 = c.elements(t2); r2 < a2.length; r2++) {
              var n2 = a2[r2];
              switch (n2.localName) {
                case "pic":
                  return this.parsePicture(n2);
              }
            }
            return null;
          }, e2.prototype.parsePicture = function(e3) {
            var t2 = { domType: a.DomType.Image, src: "", style: {} }, r2 = c.byTagName(e3, "blipFill"), n2 = c.byTagName(r2, "blip");
            t2.src = c.stringAttr(n2, "embed");
            var s2 = c.byTagName(e3, "spPr"), o2 = c.byTagName(s2, "xfrm");
            t2.style.position = "relative";
            for (var i2 = 0, u2 = c.elements(o2); i2 < u2.length; i2++) {
              var p = u2[i2];
              switch (p.localName) {
                case "ext":
                  t2.style.width = c.sizeAttr(p, "cx", l.Emu), t2.style.height = c.sizeAttr(p, "cy", l.Emu);
                  break;
                case "off":
                  t2.style.left = c.sizeAttr(p, "x", l.Emu), t2.style.top = c.sizeAttr(p, "y", l.Emu);
              }
            }
            return t2;
          }, e2.prototype.parseTable = function(e3) {
            var t2 = this, r2 = { domType: a.DomType.Table, children: [] };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "tr":
                  r2.children.push(t2.parseTableRow(e4));
                  break;
                case "tblGrid":
                  r2.columns = t2.parseTableColumns(e4);
                  break;
                case "tblPr":
                  t2.parseTableProperties(e4, r2);
              }
            }), r2;
          }, e2.prototype.parseTableColumns = function(e3) {
            var t2 = [];
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "gridCol":
                  t2.push({ width: c.sizeAttr(e4, "w") });
              }
            }), t2;
          }, e2.prototype.parseTableProperties = function(e3, t2) {
            var r2 = this;
            switch (t2.style = {}, t2.cellStyle = {}, this.parseDefaultProperties(e3, t2.style, t2.cellStyle, function(e4) {
              switch (e4.localName) {
                case "tblStyle":
                  t2.className = c.className(e4, "val");
                  break;
                case "tblLook":
                  n.addElementClass(t2, u.classNameOftblLook(e4));
                  break;
                case "tblpPr":
                  r2.parseTablePosition(e4, t2);
                  break;
                default:
                  return false;
              }
              return true;
            }), t2.style["text-align"]) {
              case "center":
                delete t2.style["text-align"], t2.style["margin-left"] = "auto", t2.style["margin-right"] = "auto";
                break;
              case "right":
                delete t2.style["text-align"], t2.style["margin-left"] = "auto";
            }
          }, e2.prototype.parseTablePosition = function(e3, t2) {
            c.stringAttr(e3, "vertAnchor"), c.stringAttr(e3, "horzAnchor"), c.sizeAttr(e3, "tblpX"), c.sizeAttr(e3, "tblpY"), c.stringAttr(e3, "tblpXSpec"), c.stringAttr(e3, "tblpYSpec");
            var r2 = c.sizeAttr(e3, "topFromText"), a2 = c.sizeAttr(e3, "bottomFromText"), n2 = c.sizeAttr(e3, "rightFromText"), s2 = c.sizeAttr(e3, "leftFromText");
            t2.style.float = "left", t2.style["margin-bottom"] = u.addSize(t2.style["margin-bottom"], a2), t2.style["margin-left"] = u.addSize(t2.style["margin-left"], s2), t2.style["margin-right"] = u.addSize(t2.style["margin-right"], n2), t2.style["margin-top"] = u.addSize(t2.style["margin-top"], r2);
          }, e2.prototype.parseTableRow = function(e3) {
            var t2 = this, r2 = { domType: a.DomType.Row, children: [] };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "tc":
                  r2.children.push(t2.parseTableCell(e4));
                  break;
                case "trPr":
                  t2.parseTableRowProperties(e4, r2);
              }
            }), r2;
          }, e2.prototype.parseTableRowProperties = function(e3, t2) {
            t2.style = this.parseDefaultProperties(e3, {}, null, function(e4) {
              switch (e4.localName) {
                case "cnfStyle":
                  t2.className = u.classNameOfCnfStyle(e4);
                  break;
                default:
                  return false;
              }
              return true;
            });
          }, e2.prototype.parseTableCell = function(e3) {
            var t2 = this, r2 = { domType: a.DomType.Cell, children: [] };
            return c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "tbl":
                  r2.children.push(t2.parseTable(e4));
                  break;
                case "p":
                  r2.children.push(t2.parseParagraph(e4));
                  break;
                case "tcPr":
                  t2.parseTableCellProperties(e4, r2);
              }
            }), r2;
          }, e2.prototype.parseTableCellProperties = function(e3, t2) {
            t2.style = this.parseDefaultProperties(e3, {}, null, function(e4) {
              switch (e4.localName) {
                case "gridSpan":
                  t2.span = c.intAttr(e4, "val", null);
                  break;
                case "vMerge":
                  break;
                case "cnfStyle":
                  t2.className = u.classNameOfCnfStyle(e4);
                  break;
                default:
                  return false;
              }
              return true;
            });
          }, e2.prototype.parseDefaultProperties = function(e3, r2, a2, n2) {
            var s2 = this;
            return void 0 === r2 && (r2 = null), void 0 === a2 && (a2 = null), void 0 === n2 && (n2 = null), r2 = r2 || {}, c.foreach(e3, function(o2) {
              switch (o2.localName) {
                case "jc":
                  r2["text-align"] = u.valueOfJc(o2);
                  break;
                case "textAlignment":
                  r2["vertical-align"] = u.valueOfTextAlignment(o2);
                  break;
                case "color":
                  r2.color = c.colorAttr(o2, "val", null, t.autos.color);
                  break;
                case "sz":
                  r2["font-size"] = c.sizeAttr(o2, "val", l.FontSize);
                  break;
                case "shd":
                  r2["background-color"] = c.colorAttr(o2, "fill", null, t.autos.shd);
                  break;
                case "highlight":
                  r2["background-color"] = c.colorAttr(o2, "val", null, t.autos.highlight);
                  break;
                case "tcW":
                  if (s2.ignoreWidth)
                    break;
                case "tblW":
                  r2.width = u.valueOfSize(o2, "w");
                  break;
                case "trHeight":
                  s2.parseTrHeight(o2, r2);
                  break;
                case "strike":
                  r2["text-decoration"] = u.valueOfStrike(o2);
                  break;
                case "b":
                  r2["font-weight"] = u.valueOfBold(o2);
                  break;
                case "i":
                  r2["font-style"] = "italic";
                  break;
                case "u":
                  s2.parseUnderline(o2, r2);
                  break;
                case "ind":
                case "tblInd":
                  s2.parseIndentation(o2, r2);
                  break;
                case "rFonts":
                  s2.parseFont(o2, r2);
                  break;
                case "tblBorders":
                  s2.parseBorderProperties(o2, a2 || r2);
                  break;
                case "tblCellSpacing":
                  r2["border-spacing"] = u.valueOfMargin(o2), r2["border-collapse"] = "separate";
                  break;
                case "pBdr":
                case "tcBorders":
                  s2.parseBorderProperties(o2, r2);
                  break;
                case "noWrap":
                  break;
                case "tblCellMar":
                case "tcMar":
                  s2.parseMarginProperties(o2, a2 || r2);
                  break;
                case "tblLayout":
                  r2["table-layout"] = u.valueOfTblLayout(o2);
                  break;
                case "vAlign":
                  r2["vertical-align"] = c.stringAttr(o2, "val");
                  break;
                case "spacing":
                  "pPr" == e3.localName && s2.parseSpacing(o2, r2);
                  break;
                case "lang":
                case "noProof":
                case "webHidden":
                  break;
                default:
                  null == n2 || n2(o2) || s2.debug && console.warn("DOCX: Unknown document element: " + o2.localName);
              }
            }), r2;
          }, e2.prototype.parseUnderline = function(e3, t2) {
            var r2 = c.stringAttr(e3, "val");
            if (null != r2 && "none" != r2) {
              switch (r2) {
                case "dash":
                case "dashDotDotHeavy":
                case "dashDotHeavy":
                case "dashedHeavy":
                case "dashLong":
                case "dashLongHeavy":
                case "dotDash":
                case "dotDotDash":
                  t2["text-decoration-style"] = "dashed";
                  break;
                case "dotted":
                case "dottedHeavy":
                  t2["text-decoration-style"] = "dotted";
                  break;
                case "double":
                  t2["text-decoration-style"] = "double";
                  break;
                case "single":
                case "thick":
                  t2["text-decoration"] = "underline";
                  break;
                case "wave":
                case "wavyDouble":
                case "wavyHeavy":
                  t2["text-decoration-style"] = "wavy";
                  break;
                case "words":
                  t2["text-decoration"] = "underline";
              }
              var a2 = c.colorAttr(e3, "color");
              a2 && (t2["text-decoration-color"] = a2);
            }
          }, e2.prototype.parseFont = function(e3, t2) {
            var r2 = c.stringAttr(e3, "ascii");
            r2 && (t2["font-family"] = r2);
          }, e2.prototype.parseIndentation = function(e3, t2) {
            var r2 = c.sizeAttr(e3, "firstLine"), a2 = c.sizeAttr(e3, "left"), n2 = c.sizeAttr(e3, "start"), s2 = c.sizeAttr(e3, "right"), o2 = c.sizeAttr(e3, "end");
            r2 && (t2["text-indent"] = r2), (a2 || n2) && (t2["margin-left"] = a2 || n2), (s2 || o2) && (t2["margin-right"] = s2 || o2);
          }, e2.prototype.parseSpacing = function(e3, t2) {
            var r2 = c.sizeAttr(e3, "before"), a2 = c.sizeAttr(e3, "after"), n2 = c.intAttr(e3, "line", null), s2 = c.stringAttr(e3, "lineRule");
            if (r2 && (t2["margin-top"] = r2), a2 && (t2["margin-bottom"] = a2), null !== n2)
              switch (s2) {
                case "auto":
                  t2["line-height"] = "" + (n2 / 240).toFixed(2);
                  break;
                case "atLeast":
                  t2["line-height"] = "calc(100% + " + n2 / 20 + "pt)";
                  break;
                default:
                  t2["line-height"] = t2["min-height"] = n2 / 20 + "pt";
              }
          }, e2.prototype.parseTabs = function(e3, t2) {
            t2.tabs = c.elements(e3, "tab").map(function(e4) {
              return { position: c.sizeAttr(e4, "pos"), leader: c.stringAttr(e4, "leader"), style: c.stringAttr(e4, "val") };
            });
          }, e2.prototype.parseMarginProperties = function(e3, t2) {
            c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "left":
                  t2["padding-left"] = u.valueOfMargin(e4);
                  break;
                case "right":
                  t2["padding-right"] = u.valueOfMargin(e4);
                  break;
                case "top":
                  t2["padding-top"] = u.valueOfMargin(e4);
                  break;
                case "bottom":
                  t2["padding-bottom"] = u.valueOfMargin(e4);
              }
            });
          }, e2.prototype.parseTrHeight = function(e3, t2) {
            switch (c.stringAttr(e3, "hRule")) {
              case "exact":
                t2.height = c.sizeAttr(e3, "val");
                break;
              case "atLeast":
              default:
                t2.height = c.sizeAttr(e3, "val");
            }
          }, e2.prototype.parseBorderProperties = function(e3, t2) {
            c.foreach(e3, function(e4) {
              switch (e4.localName) {
                case "start":
                case "left":
                  t2["border-left"] = u.valueOfBorder(e4);
                  break;
                case "end":
                case "right":
                  t2["border-right"] = u.valueOfBorder(e4);
                  break;
                case "top":
                  t2["border-top"] = u.valueOfBorder(e4);
                  break;
                case "bottom":
                  t2["border-bottom"] = u.valueOfBorder(e4);
              }
            });
          }, e2;
        }();
        t.DocumentParser = i, function(e2) {
          e2[e2.FontSize = 0] = "FontSize", e2[e2.Dxa = 1] = "Dxa", e2[e2.Emu = 2] = "Emu", e2[e2.Border = 3] = "Border", e2[e2.Percent = 4] = "Percent";
        }(l || (l = {}));
        var c = function() {
          function e2() {
          }
          return e2.parse = function(e3, t2) {
            return void 0 === t2 && (t2 = true), t2 && (e3 = e3.replace(/<[?].*[?]>/, "")), new DOMParser().parseFromString(e3, "application/xml").firstChild;
          }, e2.elements = function(e3, t2) {
            void 0 === t2 && (t2 = null);
            for (var r2 = [], a2 = 0; a2 < e3.childNodes.length; a2++) {
              var n2 = e3.childNodes[a2];
              1 != n2.nodeType || null != t2 && n2.localName != t2 || r2.push(n2);
            }
            return r2;
          }, e2.foreach = function(e3, t2) {
            for (var r2 = 0; r2 < e3.childNodes.length; r2++) {
              var a2 = e3.childNodes[r2];
              1 == a2.nodeType && t2(a2);
            }
          }, e2.byTagName = function(e3, t2) {
            for (var r2 = 0; r2 < e3.childNodes.length; r2++) {
              var a2 = e3.childNodes[r2];
              if (1 == a2.nodeType && a2.localName == t2)
                return e3.childNodes[r2];
            }
            return null;
          }, e2.elementStringAttr = function(t2, r2, a2) {
            var n2 = e2.byTagName(t2, r2);
            return n2 ? e2.stringAttr(n2, a2) : null;
          }, e2.stringAttr = function(e3, t2) {
            for (var r2 = e3, a2 = 0; a2 < r2.attributes.length; a2++) {
              var n2 = r2.attributes.item(a2);
              if (n2.localName == t2)
                return n2.value;
            }
            return null;
          }, e2.colorAttr = function(t2, r2, a2, n2) {
            void 0 === a2 && (a2 = null), void 0 === n2 && (n2 = "black");
            var s2 = e2.stringAttr(t2, r2);
            switch (s2) {
              case "yellow":
                return s2;
              case "auto":
                return n2;
            }
            return s2 ? "#" + s2 : a2;
          }, e2.boolAttr = function(t2, r2, a2) {
            switch (void 0 === a2 && (a2 = false), e2.stringAttr(t2, r2)) {
              case "1":
                return true;
              case "0":
                return false;
            }
            return a2;
          }, e2.intAttr = function(t2, r2, a2) {
            return void 0 === a2 && (a2 = 0), e2.stringAttr(t2, r2) ? parseInt(e2.stringAttr(t2, r2)) : a2;
          }, e2.sizeAttr = function(t2, r2, a2) {
            return void 0 === a2 && (a2 = l.Dxa), e2.convertSize(e2.stringAttr(t2, r2), a2);
          }, e2.sizeValue = function(t2, r2) {
            return void 0 === r2 && (r2 = l.Dxa), e2.convertSize(t2.textContent, r2);
          }, e2.convertSize = function(e3, t2) {
            if (void 0 === t2 && (t2 = l.Dxa), null == e3 || e3.indexOf("pt") > -1)
              return e3;
            var r2 = parseInt(e3);
            switch (t2) {
              case l.Dxa:
                return (0.05 * r2).toFixed(2) + "pt";
              case l.Emu:
                return (r2 / 12700).toFixed(2) + "pt";
              case l.FontSize:
                return (0.5 * r2).toFixed(2) + "pt";
              case l.Border:
                return (0.125 * r2).toFixed(2) + "pt";
              case l.Percent:
                return (0.02 * r2).toFixed(2) + "%";
            }
            return e3;
          }, e2.className = function(t2, r2) {
            var a2 = e2.stringAttr(t2, r2);
            return a2 && a2.replace(/[ .]+/g, "-").replace(/[&]+/g, "and");
          }, e2;
        }(), u = function() {
          function e2() {
          }
          return e2.valueOfBold = function(e3) {
            return c.boolAttr(e3, "val", true) ? "bold" : "normal";
          }, e2.valueOfSize = function(e3, t2) {
            var r2 = l.Dxa;
            switch (c.stringAttr(e3, "type")) {
              case "dxa":
                break;
              case "pct":
                r2 = l.Percent;
            }
            return c.sizeAttr(e3, t2, r2);
          }, e2.valueOfStrike = function(e3) {
            return c.boolAttr(e3, "val", true) ? "line-through" : "none";
          }, e2.valueOfMargin = function(e3) {
            return c.sizeAttr(e3, "w");
          }, e2.valueOfRelType = function(e3) {
            switch (c.sizeAttr(e3, "Type")) {
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings":
                return a.DomRelationshipType.Settings;
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme":
                return a.DomRelationshipType.Theme;
              case "http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects":
                return a.DomRelationshipType.StylesWithEffects;
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles":
                return a.DomRelationshipType.Styles;
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable":
                return a.DomRelationshipType.FontTable;
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image":
                return a.DomRelationshipType.Image;
              case "http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings":
                return a.DomRelationshipType.WebSettings;
            }
            return a.DomRelationshipType.Unknown;
          }, e2.valueOfBorder = function(e3) {
            if ("nil" == c.stringAttr(e3, "val"))
              return "none";
            var t2 = c.colorAttr(e3, "color");
            return c.sizeAttr(e3, "sz", l.Border) + " solid " + ("auto" == t2 ? "black" : t2);
          }, e2.valueOfTblLayout = function(e3) {
            return "fixed" == c.stringAttr(e3, "val") ? "fixed" : "auto";
          }, e2.classNameOfCnfStyle = function(e3) {
            var t2 = "", r2 = c.stringAttr(e3, "val");
            return "1" == r2[0] && (t2 += " first-row"), "1" == r2[1] && (t2 += " last-row"), "1" == r2[2] && (t2 += " first-col"), "1" == r2[3] && (t2 += " last-col"), "1" == r2[4] && (t2 += " odd-col"), "1" == r2[5] && (t2 += " even-col"), "1" == r2[6] && (t2 += " odd-row"), "1" == r2[7] && (t2 += " even-row"), "1" == r2[8] && (t2 += " ne-cell"), "1" == r2[9] && (t2 += " nw-cell"), "1" == r2[10] && (t2 += " se-cell"), "1" == r2[11] && (t2 += " sw-cell"), t2.trim();
          }, e2.valueOfJc = function(e3) {
            var t2 = c.stringAttr(e3, "val");
            switch (t2) {
              case "start":
              case "left":
                return "left";
              case "center":
                return "center";
              case "end":
              case "right":
                return "right";
              case "both":
                return "justify";
            }
            return t2;
          }, e2.valueOfTextAlignment = function(e3) {
            var t2 = c.stringAttr(e3, "val");
            switch (t2) {
              case "auto":
              case "baseline":
                return "baseline";
              case "top":
                return "top";
              case "center":
                return "middle";
              case "bottom":
                return "bottom";
            }
            return t2;
          }, e2.addSize = function(e3, t2) {
            return null == e3 ? t2 : null == t2 ? e3 : "calc(" + e3 + " + " + t2 + ")";
          }, e2.checkMask = function(e3, t2) {
            return (e3 & t2) == t2;
          }, e2.classNameOftblLook = function(e3) {
            var t2 = "";
            return c.boolAttr(e3, "firstColumn") && (t2 += " first-col"), c.boolAttr(e3, "firstRow") && (t2 += " first-row"), c.boolAttr(e3, "lastColumn") && (t2 += " lat-col"), c.boolAttr(e3, "lastRow") && (t2 += " last-row"), c.boolAttr(e3, "noHBand") && (t2 += " no-hband"), c.boolAttr(e3, "noVBand") && (t2 += " no-vband"), t2.trim();
          }, e2;
        }();
      }, function(e, t, r) {
        "use strict";
        function a(e2, t2) {
          return e2 ? e2 + " " + t2 : t2;
        }
        Object.defineProperty(t, "__esModule", { value: true }), t.addElementClass = function(e2, t2) {
          return e2.className = a(e2.className, t2);
        }, t.appendClass = a;
      }, function(e, t, r) {
        "use strict";
        Object.defineProperty(t, "__esModule", { value: true }), t.namespaces = { wordml: "http://schemas.openxmlformats.org/wordprocessingml/2006/main" };
      }, function(e, t, r) {
        "use strict";
        var a;
        function n(e2, t2) {
          if (void 0 === t2 && (t2 = a.Dxa), !e2)
            return null;
          var r2 = parseInt(e2);
          switch (t2) {
            case a.Dxa:
              return { value: 0.05 * r2, type: "pt" };
            case a.Emu:
              return { value: r2 / 12700, type: "pt" };
            case a.FontSize:
              return { value: 0.5 * r2, type: "pt" };
            case a.Border:
              return { value: 0.125 * r2, type: "pt" };
            case a.Percent:
              return { value: 0.02 * r2, type: "%" };
          }
          return null;
        }
        Object.defineProperty(t, "__esModule", { value: true }), t.forEachElementNS = function(e2, t2, r2) {
          for (var a2 = 0; a2 < e2.childNodes.length; a2++) {
            var n2 = e2.childNodes[a2];
            1 == n2.nodeType && n2.namespaceURI == t2 && r2(n2);
          }
        }, t.getAttributeIntValue = function(e2, t2, r2) {
          var a2 = e2.getAttributeNS(t2, r2);
          return a2 ? parseInt(a2) : null;
        }, t.getAttributeColorValue = function(e2, t2, r2) {
          var a2 = e2.getAttributeNS(t2, r2);
          return a2 ? "#" + a2 : null;
        }, t.getAttributeBoolValue = function(e2, t2, r2, a2) {
          void 0 === a2 && (a2 = false);
          var n2 = e2.getAttributeNS(t2, r2);
          return null == n2 ? a2 : "true" === n2 || "1" === n2;
        }, t.getAttributeLengthValue = function(e2, t2, r2, s) {
          return void 0 === s && (s = a.Dxa), n(e2.getAttributeNS(t2, r2), s);
        }, function(e2) {
          e2[e2.Dxa = 0] = "Dxa", e2[e2.Emu = 1] = "Emu", e2[e2.FontSize = 2] = "FontSize", e2[e2.Border = 3] = "Border", e2[e2.Percent = 4] = "Percent";
        }(a = t.LengthUsage || (t.LengthUsage = {})), t.parseLength = n;
      }, function(e, t, r) {
        "use strict";
        var a = this && this.__assign || function() {
          return (a = Object.assign || function(e2) {
            for (var t2, r2 = 1, a2 = arguments.length; r2 < a2; r2++)
              for (var n2 in t2 = arguments[r2])
                Object.prototype.hasOwnProperty.call(t2, n2) && (e2[n2] = t2[n2]);
            return e2;
          }).apply(this, arguments);
        };
        Object.defineProperty(t, "__esModule", { value: true });
        var n = r(0), s = function() {
          function e2(e3) {
            this.htmlDocument = e3, this.inWrapper = true, this.className = "docx", this.digitTest = /^[0-9]/.test;
          }
          return e2.prototype.render = function(e3, t2, r2, a2) {
            void 0 === r2 && (r2 = null), this.document = e3, this.options = a2, r2 = r2 || t2, this.clearElement(r2), this.clearElement(t2), r2.appendChild(this.htmlDocument.createComment("docxjs library predefined styles")), r2.appendChild(this.renderDefaultStyle()), r2.appendChild(this.htmlDocument.createComment("docx document styles")), r2.appendChild(this.renderStyles(e3.styles)), e3.numbering && (r2.appendChild(this.htmlDocument.createComment("docx document numbering styles")), r2.appendChild(this.renderNumbering(e3.numbering, r2)));
            var n2 = this.renderDocument(e3.document);
            if (this.inWrapper) {
              var s2 = this.renderWrapper();
              s2.appendChild(n2), t2.appendChild(s2);
            } else
              t2.appendChild(n2);
          }, e2.prototype.clearElement = function(e3) {
            for (; e3.firstChild; )
              e3.removeChild(e3.firstChild);
          }, e2.prototype.processClassName = function(e3) {
            return e3 ? this.className + "_" + e3 : this.className;
          }, e2.prototype.processStyles = function(e3) {
            for (var t2 = {}, r2 = 0, a2 = e3.filter(function(e4) {
              return null != e4.id;
            }); r2 < a2.length; r2++) {
              t2[(m = a2[r2]).id] = m;
            }
            for (var n2 = 0, s2 = e3.filter(function(e4) {
              return e4.basedOn;
            }); n2 < s2.length; n2++) {
              var o = t2[(m = s2[n2]).basedOn];
              if (o)
                for (var l, i = function(e4) {
                  (l = o.styles.filter(function(t3) {
                    return t3.target == e4.target;
                  })) && l.length > 0 && c.copyStyleProperties(l[0].values, e4.values);
                }, c = this, u = 0, p = m.styles; u < p.length; u++) {
                  i(p[u]);
                }
              else
                this.options.debug && console.warn("Can't find base style " + m.basedOn);
            }
            for (var d = 0, h = e3; d < h.length; d++) {
              var m;
              (m = h[d]).id = this.processClassName(m.id);
            }
            return t2;
          }, e2.prototype.processElement = function(e3) {
            if (e3.children)
              for (var t2 = 0, r2 = e3.children; t2 < r2.length; t2++) {
                var a2 = r2[t2];
                a2.className = this.processClassName(a2.className), a2.domType == n.DomType.Table ? this.processTable(a2) : this.processElement(a2);
              }
          }, e2.prototype.processTable = function(e3) {
            for (var t2 = 0, r2 = e3.children; t2 < r2.length; t2++)
              for (var a2 = 0, n2 = r2[t2].children; a2 < n2.length; a2++) {
                var s2 = n2[a2];
                s2.style = this.copyStyleProperties(e3.cellStyle, s2.style, ["border-left", "border-right", "border-top", "border-bottom", "padding-left", "padding-right", "padding-top", "padding-bottom"]), this.processElement(s2);
              }
          }, e2.prototype.copyStyleProperties = function(e3, t2, r2) {
            if (void 0 === r2 && (r2 = null), !e3)
              return t2;
            null == t2 && (t2 = {}), null == r2 && (r2 = Object.getOwnPropertyNames(e3));
            for (var a2 = 0, n2 = r2; a2 < n2.length; a2++) {
              var s2 = n2[a2];
              e3.hasOwnProperty(s2) && !t2.hasOwnProperty(s2) && (t2[s2] = e3[s2]);
            }
            return t2;
          }, e2.prototype.renderDocument = function(e3) {
            var t2 = this.htmlDocument.createElement("section");
            if (t2.className = this.className, this.processElement(e3), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), e3.props) {
              var r2 = e3.props;
              r2.pageMargins && (t2.style.paddingLeft = this.renderLength(r2.pageMargins.left), t2.style.paddingRight = this.renderLength(r2.pageMargins.right), t2.style.paddingTop = this.renderLength(r2.pageMargins.top), t2.style.paddingBottom = this.renderLength(r2.pageMargins.bottom)), r2.pageSize && (this.options.ignoreWidth || (t2.style.width = this.renderLength(r2.pageSize.width)), this.options.ignoreHeight || (t2.style.height = this.renderLength(r2.pageSize.height))), r2.columns && r2.columns.numberOfColumns && (t2.style.columnCount = "" + r2.columns.numberOfColumns, t2.style.columnGap = this.renderLength(r2.columns.space), r2.columns.separator && (t2.style.columnRule = "1px solid black"));
            }
            return t2;
          }, e2.prototype.renderLength = function(e3) {
            return e3 ? "" + e3.value + e3.type : null;
          }, e2.prototype.renderWrapper = function() {
            var e3 = document.createElement("div");
            return e3.className = this.className + "-wrapper", e3;
          }, e2.prototype.renderDefaultStyle = function() {
            var e3 = "." + this.className + "-wrapper { background: gray; padding: 30px; display: flex; justify-content: center; } \n                ." + this.className + "-wrapper section." + this.className + " { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); }\n                ." + this.className + " { color: black; }\n                section." + this.className + " { box-sizing: border-box; }\n                ." + this.className + " table { border-collapse: collapse; }\n                ." + this.className + " table td, ." + this.className + " table th { vertical-align: top; }\n                ." + this.className + " p { margin: 0pt; }";
            return this.renderStyle(e3);
          }, e2.prototype.renderNumbering = function(e3, t2) {
            for (var r2, n2, s2 = this, o = "", l = [], i = function() {
              if (r2 = "p." + c.numberingClass(d.id, d.level), n2 = "none", d.levelText && "decimal" == d.format) {
                var e4 = c.numberingCounter(d.id, d.level);
                d.level > 0 ? o += c.styleToString("p." + c.numberingClass(d.id, d.level - 1), { "counter-reset": e4 }) : l.push(e4), o += c.styleToString(r2 + ":before", { content: c.levelTextToContent(d.levelText, d.id), "counter-increment": e4 }), o += c.styleToString(r2, a({ display: "list-item", "list-style-position": "inside", "list-style-type": "none" }, d.style));
              } else if (d.bullet) {
                var i2 = ("--" + c.className + "-" + d.bullet.src).toLowerCase();
                o += c.styleToString(r2 + ":before", { content: "' '", display: "inline-block", background: "var(" + i2 + ")" }, d.bullet.style), c.document.loadNumberingImage(d.bullet.src).then(function(e5) {
                  var r3 = "." + s2.className + "-wrapper { " + i2 + ": url(" + e5 + ") }";
                  t2.appendChild(s2.renderStyle(r3));
                });
              } else
                n2 = c.numFormatToCssValue(d.format);
              o += c.styleToString(r2, a({ display: "list-item", "list-style-position": "inside", "list-style-type": n2 }, d.style));
            }, c = this, u = 0, p = e3; u < p.length; u++) {
              var d = p[u];
              i();
            }
            return l.length > 0 && (o += this.styleToString("." + this.className + "-wrapper", { "counter-reset": l.join(" ") })), this.renderStyle(o);
          }, e2.prototype.renderStyle = function(e3) {
            var t2 = document.createElement("style");
            return t2.type = "text/css", t2.innerHTML = e3, t2;
          }, e2.prototype.renderStyles = function(e3) {
            for (var t2 = "", r2 = this.processStyles(e3), a2 = 0, n2 = e3; a2 < n2.length; a2++) {
              var s2 = n2[a2], o = s2.styles;
              if (s2.linked) {
                var l = s2.linked && r2[s2.linked];
                l ? o = o.concat(l.styles) : this.options.debug && console.warn("Can't find linked style " + s2.linked);
              }
              for (var i = 0, c = o; i < c.length; i++) {
                var u = c[i], p = "";
                s2.target == u.target ? p += s2.target + "." + s2.id : s2.target ? p += s2.target + "." + s2.id + " " + u.target : p += "." + s2.id + " " + u.target, s2.isDefault && s2.target && (p = "." + this.className + " " + s2.target + ", " + p), t2 += this.styleToString(p, u.values);
              }
            }
            return this.renderStyle(t2);
          }, e2.prototype.renderElement = function(e3, t2) {
            switch (e3.domType) {
              case n.DomType.Paragraph:
                return this.renderParagraph(e3);
              case n.DomType.Run:
                return this.renderRun(e3);
              case n.DomType.Table:
                return this.renderTable(e3);
              case n.DomType.Row:
                return this.renderTableRow(e3);
              case n.DomType.Cell:
                return this.renderTableCell(e3);
              case n.DomType.Hyperlink:
                return this.renderHyperlink(e3);
              case n.DomType.Drawing:
                return this.renderDrawing(e3);
              case n.DomType.Image:
                return this.renderImage(e3);
            }
            return null;
          }, e2.prototype.renderChildren = function(e3, t2) {
            var r2 = this, a2 = null;
            if (null != e3.children && (a2 = e3.children.map(function(t3) {
              return r2.renderElement(t3, e3);
            }).filter(function(e4) {
              return null != e4;
            })), t2 && a2)
              for (var n2 = 0, s2 = a2; n2 < s2.length; n2++) {
                var o = s2[n2];
                t2.appendChild(o);
              }
            return a2;
          }, e2.prototype.renderParagraph = function(e3) {
            var t2 = this.htmlDocument.createElement("p");
            return this.renderClass(e3, t2), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), this.renderCommonProeprties(t2, e3.props), e3.numberingId && null != e3.numberingLevel && (t2.className = t2.className + " " + this.numberingClass(e3.numberingId, e3.numberingLevel)), t2;
          }, e2.prototype.renderCommonProeprties = function(e3, t2) {
            null != t2 && (t2.color && (e3.style.color = t2.color), t2.fontSize && (e3.style.fontSize = this.renderLength(t2.fontSize)));
          }, e2.prototype.renderHyperlink = function(e3) {
            var t2 = this.htmlDocument.createElement("a");
            return this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), e3.href && (t2.href = e3.href), t2;
          }, e2.prototype.renderDrawing = function(e3) {
            var t2 = this.htmlDocument.createElement("div");
            return t2.style.display = "inline-block", t2.style.position = "relative", t2.style.textIndent = "0px", this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), t2;
          }, e2.prototype.renderImage = function(e3) {
            var t2 = this.htmlDocument.createElement("img");
            return this.renderStyleValues(e3.style, t2), this.document && this.document.loadDocumentImage(e3.src).then(function(e4) {
              t2.src = e4;
            }), t2;
          }, e2.prototype.renderRun = function(e3) {
            if (e3.break)
              return this.htmlDocument.createElement("page" == e3.break ? "hr" : "br");
            var t2 = this.htmlDocument.createElement("span");
            if (e3.text && (t2.textContent = e3.text), this.renderClass(e3, t2), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), e3.id && (t2.id = e3.id), e3.tab)
              ;
            else {
              if (e3.href) {
                var r2 = this.htmlDocument.createElement("a");
                return r2.href = e3.href, r2.appendChild(t2), r2;
              }
              if (e3.wrapper) {
                var a2 = this.htmlDocument.createElement(e3.wrapper);
                return a2.appendChild(t2), a2;
              }
            }
            return t2;
          }, e2.prototype.renderTable = function(e3) {
            var t2 = this.htmlDocument.createElement("table");
            return this.renderClass(e3, t2), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), e3.columns && t2.appendChild(this.renderTableColumns(e3.columns)), t2;
          }, e2.prototype.renderTableColumns = function(e3) {
            for (var t2 = this.htmlDocument.createElement("colGroup"), r2 = 0, a2 = e3; r2 < a2.length; r2++) {
              var n2 = a2[r2], s2 = this.htmlDocument.createElement("col");
              n2.width && (s2.style.width = n2.width + "px"), t2.appendChild(s2);
            }
            return t2;
          }, e2.prototype.renderTableRow = function(e3) {
            var t2 = this.htmlDocument.createElement("tr");
            return this.renderClass(e3, t2), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), t2;
          }, e2.prototype.renderTableCell = function(e3) {
            var t2 = this.htmlDocument.createElement("td");
            return this.renderClass(e3, t2), this.renderChildren(e3, t2), this.renderStyleValues(e3.style, t2), e3.span && (t2.colSpan = e3.span), t2;
          }, e2.prototype.renderStyleValues = function(e3, t2) {
            if (null != e3)
              for (var r2 in e3)
                e3.hasOwnProperty(r2) && (t2.style[r2] = e3[r2]);
          }, e2.prototype.renderClass = function(e3, t2) {
            e3.className && (t2.className = e3.className);
          }, e2.prototype.numberingClass = function(e3, t2) {
            return this.className + "-num-" + e3 + "-" + t2;
          }, e2.prototype.styleToString = function(e3, t2, r2) {
            void 0 === r2 && (r2 = null);
            var a2 = e3 + " {\r\n";
            for (var n2 in t2)
              a2 += "  " + n2 + ": " + t2[n2] + ";\r\n";
            return r2 && (a2 += ";" + r2), a2 + "}\r\n";
          }, e2.prototype.numberingCounter = function(e3, t2) {
            return this.className + "-num-" + e3 + "-" + t2;
          }, e2.prototype.levelTextToContent = function(e3, t2) {
            var r2 = this;
            return '"' + e3.replace(/%\d*/g, function(e4) {
              var a2 = parseInt(e4.substring(1), 10) - 1;
              return '"counter(' + r2.numberingCounter(t2, a2) + ')"';
            }) + '"';
          }, e2.prototype.numFormatToCssValue = function(e3) {
            return { none: "none", bullet: "disc", decimal: "decimal", lowerLetter: "lower-alpha", upperLetter: "upper-alpha", lowerRoman: "lower-roman", upperRoman: "upper-roman" }[e3] || e3;
          }, e2;
        }();
        t.HtmlRenderer = s;
      }]);
    });
  }
});
export default require_docx_preview_min();
//# sourceMappingURL=docx-preview.js.map
